@page "/interests"
@using Fora.Shared.ViewModels
@using Newtonsoft.Json
@using System.Security.Claims
@attribute [Authorize]
@inject NavigationManager navigationmanager
@inject AuthenticationStateProvider AuthStateProvider
@inject IInterestService interestService
@inject IJSRuntime JSRuntime
@inject ILocalStorageService LocalStorage
@inject ISettingsService SettingsService

<PageTitle>MyInterests</PageTitle>

<h3>My Interests</h3>


@if(MyInterests != null)
{
    @foreach(var interest in MyInterests)
    {
        @if(!String.IsNullOrEmpty(interest.Name))
        {    
                      <a class="text-primary" @onclick="@(() => NavigateToThreads(interest.Id))">@interest.Name</a>                   
                    <div class="text-sm op-5"> <a class="text-black mr-2">Threads: @interest.ThreadCount</a></div>

                    @if (Admin || CurrentUserId == interest.AuthorId)
                        {
                            <div class="col px-1"> <i class="ion-ios-eye-outline icon-1x"></i> <button type="button" class="btn btn-primary" 
                          @onclick="@(() => NavigateToEdit(interest.Id))">Edit</button> </div>
                        }                        
        }
    }
}



@code {

    List<InterestViewModel> MyInterests { get; set; }

    public List<InterestViewModel>? AllInterests { get; set; }

    int CurrentUserId { get; set; }

    bool Admin { get; set; }

    protected override async Task OnInitializedAsync()
    {
        MyInterests = await interestService.GetMyInterests();
        // Hämta intressen från databasen (via API)
        AllInterests = await interestService.GetAllInterests();

        var authstate = await AuthStateProvider.GetAuthenticationStateAsync();
        var id = authstate.User.Claims.Where(c => c.Type == ClaimTypes.Authentication)
            .Select(c => c.Value).SingleOrDefault();
        var adminCheck = authstate.User.Claims.Where(c => c.Type == ClaimTypes.Role)
            .Select(c => c.Value).SingleOrDefault();

        Admin = adminCheck == "Admin" ? true : false;
        CurrentUserId = int.Parse(id);

    }


    private void NavigateToEdit(int id)
    {
        navigationmanager.NavigateTo($"/editinterest/{id}");
    }


    private void NavigateToThreads(int id)
    {
        navigationmanager.NavigateTo($"/interestthreads/{id}");
    }
}
